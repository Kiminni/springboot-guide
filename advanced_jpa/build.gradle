plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.1.4'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"

}

group = 'org.springboot'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'com.querydsl:querydsl-jpa' // QueryDSL JPA 라이브러리
    implementation 'com.querydsl:querydsl-apt' // 쿼리 타입 생성에 필요한 라이브러리

}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl" // querydsl에서 사용할 경로 설정
querydsl { // querydsl 설정 추가. (JPA사용여부, 경로)
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets { // build시 사용할 sourceSet
    main {
        java {
            srcDirs = ['src/main/java', querydslDir]
        }
    }
}

compileQuerydsl { // querydsl 컴파일시 사용할 옵션
    options.annotationProcessorPath = configurations.querydsl
}

configurations { // querydsl이 compileClasspath를 상속하도록 설정
    querydsl.extendsFrom compileClasspath
}
